@model int

@{
    ViewBag.Breadcrumbs = new List<AdminFrontend.Models.Breadcrump>
    {
        new AdminFrontend.Models.Breadcrump { Title = "Курсы", Action = "Index", Controller = "Courses" },
        new AdminFrontend.Models.Breadcrump { Title = ViewBag.Title, Unclickable = true }
    };
}

<h2>@ViewBag.Title</h2>

<style>
    .rcp-edit-table {
        margin-top: 20px;
        margin-bottom: 20px;
    }
    .rcp-edit-table input {
        margin-bottom: 5px;
    }
</style>

<div id="course-edit-form">
    <table class="rcp-edit-table">
        <tr>
            <td>Название</td>
            <td><input data-bind="value: Name" /></td>
        </tr>
        <tr>
            <td>Описание</td>
            <td><input data-bind="value: Description" /></td>
        </tr>
        <tr>
            <td>Проходной балл (от 0 до 100)</td>
            <td><input data-bind="value: MinPercentage" /></td>
        </tr>
        <tr>
            <td>Материал для подготовки</td>
            <td><textarea data-bind="value: MaterialText"></textarea></td>
        </tr>
    </table>

    <div>
        <h3>Вопросы</h3>
        @*<div data-bind="template: 'question-template', foreach: Questions"></div>*@
        <div data-bind="foreach: Questions">
            <div class="question-edit-container">
                <a class="fa fa-times question-delete-btn rcp-delete-btn" title="Удалить" data-bind="click: function() { $root.deleteQuestion($data) }"></a>
                <div>
                    <h4>
                        Вопрос #
                        <span data-bind="text: $index() + 1"></span>
                    </h4>
                    
                    Текст вопроса
                    <div class="question-text-container">
                        <textarea data-bind="value: Text"></textarea>
                    </div>
                </div>
                <h5>Варианты ответов</h5>
                <div class="answers-list-container" data-bind="foreach: Answers">
                    <div class="answer-container">
                        <input type="checkbox" data-bind="checked: IsCorrect" />
                        <input data-bind="value: Text" />
                        <a class="fa fa-times rcp-delete-btn" title="Удалить" data-bind="click: function() { $root.deleteAnswer($parent, $data) }"></a>
                    </div>
                </div>
                <button class="rcp-button rcp-button-min" data-bind="click: function() { $root.addAnswer($data) }">Добавить вариант ответа</button>
            </div>
        </div>
        <button class="rcp-button rcp-button-min" data-bind="click: function() { $root.addQuestion() }">Добавить вопрос</button>
    </div>
    <hr />
    <button class="rcp-button" data-bind="click: save">Сохранить</button>
</div>

<script type="text/html" id="question-template">
    <hr />
    <div>
        <h4><input data-bind="value: Text" /></h4>
        <button class="rcp-button" data-bind="click: $root.deleteQuestion($data)">Удалить вопрос</button>
    </div>
    <div>
        <h5>Варианты ответов</h5>
        <div data-bind="template: 'answer-template', foreach: Answers"></div>
        <button class="rcp-button" data-bind="click: $root.addAnswer($data)">Добавить вариант ответа</button>
    </div>
</script>

<script type="text/html" id="answer-template">
    <input type="checkbox" data-bind="checked: IsCorrect" />
    <input data-bind="value: Text" />
    <button class="rcp-button" data-bind="click: $root.deleteAnswer($parent, $data)">Удалить вариант ответа</button>
</script>

<script type="text/javascript">
    $(() => {
        Fader.show();
        function init(data) {
            var viewModel = ko.mapping.fromJS(data);
            viewModel.deleteQuestion = function (question) {
                viewModel.Questions.remove(question);
            }
            viewModel.deleteAnswer = function (question, answer) {
                question.Answers.remove(answer);
            }
            viewModel.addQuestion = function () {
                viewModel.Questions.push({
                    Id: ko.observable(0),
                    Text: ko.observable(''),
                    Answers: ko.observableArray([])
                });
            }
            viewModel.addAnswer = function (question) {
                question.Answers.push({
                    Id: ko.observable(0),
                    Text: ko.observable(''),
                    IsCorrect: ko.observable(false)
                });
            }
            viewModel.save = function () {
                let postData = ko.mapping.toJS(viewModel);
                Fader.show();
                $.post(
                    '@Url.Action("Save", new { id = Model })',
                    postData,
                    function (result) {
                        if (result.success) {
                            window.location.replace(result.returnTo);
                        } else {
                            alert(result.msg);
                        }
                        Fader.hide();
                    }
                )
                .fail(function () {
                    window.location.replace('@Url.Action("Default", "Errors")');
                });
            }

            ko.applyBindings(viewModel, $('#course-edit-form')[0]);
            Fader.hide();
        }

        $.post('@Url.Action("GetCourse", new { id = Model })',
            {},
            function (data) {
                init(data);
            }
        )
        .fail(function () {
            window.location.replace('@Url.Action("Default", "Errors")');
        });
    });
</script>